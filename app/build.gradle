plugins {

    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
// Apply the Crashlytics Gradle plugin
    id 'com.google.firebase.crashlytics'

}


android {
    compileSdkVersion Integer.parseInt(ANDROID_COMPILE_SDK_VERSION)
    buildToolsVersion ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.mmk.quotesapp"
        minSdkVersion Integer.parseInt(ANDROID_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(ANDROID_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME
        testInstrumentationRunner "com.mmk.quotesapp.base.KoinTestRunner"
        multiDexEnabled true

    }

    //Animations are disabled for testing purposes
    testOptions {
        animationsDisabled = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/AL2.0'
        exclude("META-INF/*.kotlin_module")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":domain")
    implementation project(":data")

    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.google.android.material:material:$version_material"
    implementation "androidx.appcompat:appcompat:$version_androidx_appcompat"
    implementation "androidx.core:core-ktx:$version_androidx_core"
    implementation "androidx.constraintlayout:constraintlayout:$version_constraintlayout"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    //Paging
    implementation "androidx.paging:paging-runtime-ktx:$version_paging"


    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"


    //Picasso
    implementation "com.squareup.picasso:picasso:$version_picasso"

    //Circle ImageView
    implementation "de.hdodenhof:circleimageview:$version_circle_image_view"

    // Use viewModelScope from lifecycle-viewmodel-ktx
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle_extensions"
    // Live Data Scope KTX
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle_extensions"


    implementation platform("com.google.firebase:firebase-bom:$version_firebase")
    //Firebase Google Analytics
    implementation "com.google.firebase:firebase-analytics-ktx"
    // Firebase Crashlytics SDK.
    implementation "com.google.firebase:firebase-crashlytics"

    implementation libs.koinCore
    // Koin AndroidX Scope features
    implementation "org.koin:koin-androidx-scope:$version_koin"
    // Koin AndroidX ViewModel features
    implementation "org.koin:koin-androidx-viewmodel:$version_koin"
    // Koin AndroidX Fragment features
    implementation "org.koin:koin-androidx-fragment:$version_koin"
    //Timber
    implementation libs.timber

    //Testing Libraries

    //Local Unit testing libraries
    testImplementation "junit:junit:$version_junit" //JUnit 4 framework
    testImplementation "org.mockito.kotlin:mockito-kotlin:$version_mock" //Mockito framework
    testImplementation "com.google.truth:truth:$version_truth" //Truth lib for assertion
    testImplementation "androidx.arch.core:core-testing:2.1.0"




    //Integration(UI) testing libraries
    androidTestImplementation "androidx.test:core:$version_androidXTestCore" //Robolectric

    androidTestImplementation "androidx.test.ext:junit:$version_androidx_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$version_androidx_expresso"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_kotlin_coroutines"
    debugImplementation "androidx.fragment:fragment-testing:$version_fragment"
    androidTestImplementation "org.koin:koin-test:$version_koin" // Koin testing tools


}
kapt {
    correctErrorTypes true
}